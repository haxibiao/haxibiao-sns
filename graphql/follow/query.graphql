type Follow {
    id: Int
    user: User @belongsTo
    follow_user: User
    followed_id: Int!
    followed_type: FollowType!
    name: String!
    latest_article_title: String
    dynamic_msg: String
    followed_status: Int
    created_at: DateTime!
    updated_at: DateTime!
    category: Category
    people: User
    collection: Collection
    isFollowed: Boolean
}

extend type Query {
    #    followers(user_id: Int, filter: FollowedEnumType): Follow
    #        @paginate(defaultCount: 10, builder: "App\\Follow@resolveFollowers")
    followers(
        followed_type: String! @eq(key: "followable_type")
        followed_id: Int! @eq(key: "followable_id")
        orderBy: [OrderByClause!] = { field: "id", order: DESC } @orderBy
    ): [Follow!] @paginate(defaultCount: 10)
    # 我的全部关注, 或我的某个类关注
    follows(
        user_id: Int! @eq
        followed_type: String @eq(key: "followable_type")
        orderBy: [OrderByClause!] = { field: "id", order: DESC } @orderBy
    ): [Follow!] @paginate(defaultCount: 10)

    """
    关注用户的 收藏/普通动态
    """
    followPosts(user_id: Int!, filter: PostFilter = spider): [Post!]
    @paginate(builder: "App\\Post@resolveFollowPosts", defaultCount: 10)
    #    follows(user_id: Int, filter: FollowedEnumType): Follow
    #        @paginate(defaultCount: 10, builder: "App\\Follow@resolveFollows")
}

enum FollowedEnumType {
    users
    collections
}
